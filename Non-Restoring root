	.data
	.text
	.globl main
main:
	li	$v0, 5
	syscall
	move	$a0, $v0
	jal	root
	move	$a0, $v0	
	li	$v0, 1
	syscall
	li	$v0, 10
	syscall
	
	.globl	root
root:
	move 	$t0, $zero
	li	$t1, 1
	sll	$t1, $t1, 30
	move	$t2, $zero
find:
	bleu	$t1, $a0, start
	srl	$t1, $t1, 2
	srl	$t0, $t0, 1
	b	find
start:
	subu	$a0, $a0, $t1
bits:
	beq	$t1, $zero, end
	srl	$t0, $t0, 1
	bltz	$a0, negative
	or	$t0, $t0, $t1
	srl	$t1, $t1, 2
	or	$t2, $t0, $t1
	subu	$a0, $a0, $t2
	b	bits
negative:
	srl	$t1, $t1, 1
	or	$t2, $t0, $t1
	srl	$t1, $t1, 1
	or	$t2, $t2, $t1
	addu	$a0, $a0, $t2
	b 	bits
end:
	move	$v0, $t0
	jr	$ra